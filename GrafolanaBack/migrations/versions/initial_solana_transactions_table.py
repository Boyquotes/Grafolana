"""create solana_transactions table

Revision ID: initial_solana_transactions # Replace with actual ID
Revises:
Create Date: 2025-04-16
"""
from alembic import op
import sqlalchemy as sa
# If you want to be explicit about PostgreSQL types:
# from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'solana_transactions' # Replace with actual ID
down_revision = 'initial_labels_table'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('solana_transactions',
        sa.Column('transaction_signature', sa.String(), nullable=False),
        # Use LargeBinary for portability, maps to BYTEA in PG
        sa.Column('transaction_json', sa.LargeBinary(), nullable=False),
        # Or explicitly for PostgreSQL:
        # sa.Column('transaction_json', postgresql.BYTEA(), nullable=False),
        sa.PrimaryKeyConstraint('transaction_signature')
    )
    # You might want an index on the signature for faster lookups if you query by it often
    # op.create_index(op.f('ix_solana_transactions_transaction_signature'), 'solana_transactions', ['transaction_signature'], unique=True) # Already unique via PK
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index(op.f('ix_solana_transactions_transaction_signature'), table_name='solana_transactions')
    op.drop_table('solana_transactions')
    # ### end Alembic commands ###